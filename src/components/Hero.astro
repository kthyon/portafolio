---
interface Props {
	title: string;
	tagline?: string;
	align?: 'start' | 'center';
}

const { align = 'center', tagline, title } = Astro.props;
---

<div class:list={['hero stack gap-4', align]}>
	<div class="stack gap-2">
		<h1 class="title">{title}</h1>
		{tagline && <p class="tagline">{tagline}</p>}
	</div>
	<slot />
</div>

<style>
	.hero {
		font-size: var(--text-lg);
		text-align: center;
	}

	.title,
	.tagline {
		max-width: 37ch;
		margin-inline: auto;
	}

	.title {
  font-size: var(--text-3xl);
  color: var(--gray-0);
  width: 0;
  position: relative;
  overflow: hidden;
  white-space: nowrap;
  border-right: 3px solid var(--gray-0); /* Cursor visible */
  animation: typewriter 4s steps(30) 1s forwards, 
             blinkCursor 500ms steps(30) 5s, /* Parpadeo durante 5 segundos */
             hideCursor 500ms 10s forwards; /* Desaparición del cursor después de 10s */
}

.title::after {
  content: '';
  position: absolute;
  top: 0;
  left: 100%; /* Inicia a la derecha del texto */
  width: 100%;
  height: 100%;
  background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.5), transparent); /* Brillo más suave */
  animation: textShine 2s 9s forwards; /* Comienza después de 9s, dura 2s */
}

@keyframes typewriter {
  to { width: 100%; }
}

@keyframes blinkCursor {
  0%, 100% { border-right-color: var(--gray-0); }
  50% { border-right-color: transparent; }
}

@keyframes hideCursor {
  to { border-right-color: transparent; }
}

@keyframes textShine {
  from { left: 100%; }
  to { left: -100%; } /* Mueve el brillo de derecha a izquierda */
}



	@media (min-width: 50em) {
		.hero {
			font-size: var(--text-xl);
		}

		.start {
			text-align: start;
		}

		.start .title,
		.start .tagline {
			margin-inline: unset;
		}

		.title {
			font-size: var(--text-5xl);
		}
	}
</style>
